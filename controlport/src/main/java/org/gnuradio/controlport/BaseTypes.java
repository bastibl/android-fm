/**
 * Autogenerated by Thrift Compiler (1.0.0-dev)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.gnuradio.controlport;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum BaseTypes implements org.apache.thrift.TEnum {
  BOOL(0),
  BYTE(1),
  SHORT(2),
  INT(3),
  LONG(4),
  DOUBLE(5),
  STRING(6),
  COMPLEX(7),
  F32VECTOR(8),
  F64VECTOR(9),
  S64VECTOR(10),
  S32VECTOR(11),
  S16VECTOR(12),
  S8VECTOR(13),
  C32VECTOR(14);

  private final int value;

  private BaseTypes(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static BaseTypes findByValue(int value) { 
    switch (value) {
      case 0:
        return BOOL;
      case 1:
        return BYTE;
      case 2:
        return SHORT;
      case 3:
        return INT;
      case 4:
        return LONG;
      case 5:
        return DOUBLE;
      case 6:
        return STRING;
      case 7:
        return COMPLEX;
      case 8:
        return F32VECTOR;
      case 9:
        return F64VECTOR;
      case 10:
        return S64VECTOR;
      case 11:
        return S32VECTOR;
      case 12:
        return S16VECTOR;
      case 13:
        return S8VECTOR;
      case 14:
        return C32VECTOR;
      default:
        return null;
    }
  }
}
